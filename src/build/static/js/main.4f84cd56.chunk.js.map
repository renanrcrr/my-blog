{"version":3,"sources":["navbar.js","pages/AboutPage.js","components/ArticlesList.js","components/CommentsList.js","components/UpvotesSection.js","pages/NotFoundPages.js","pages/article-content.js","components/AddCommentForm.js","pages/ArticlePage.js","pages/ArticlesListPage.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","to","AboutPage","ArticlesList","articles","map","article","key","className","name","title","content","substring","CommentsList","comments","comment","username","text","UpvotesSection","articleName","upvotes","setArticleInfo","upvoteArticle","a","fetch","method","result","json","body","id","onClick","NotFoundPage","AddCommentForm","useState","setUsername","commentText","setCommentText","addComment","JSON","stringify","headers","type","value","onChange","event","target","rows","cols","ArticlePage","match","params","articleContent","find","articleInfo","useEffect","console","log","fetchData","otherArticles","filter","paragraph","ArticlesListPage","HomePage","App","path","component","exact","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f84cd56.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/about\">About</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/articles-list\">Articles</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\r\n\r\nconst AboutPage = () => {\r\n    return (\r\n    <>\r\n        <h1>About me</h1>\r\n        <p>\r\n            It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).    \r\n        </p>\r\n        <p>\r\n            It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).    \r\n        </p>\r\n    </>    \r\n    );\r\n}\r\n\r\nexport default AboutPage;","import React from 'react';\r\n//get the Link component\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n//reusable component ArticlesList\r\n//ArticlesListPage send props articleContent to articles\r\nconst ArticlesList = ({articles}) => (\r\n    <>\r\n        {articles.map((article, key) => (\r\n            <Link className=\"article-list-item\" key={key} to={`/article/${article.name}`}>\r\n                <h3>{article.title}</h3>\r\n                <p>{article.content[0].substring(0, 150)}...</p>\r\n            </Link>\r\n        ))}\r\n    </>    \r\n    );\r\n\r\nexport default ArticlesList;","import React from 'react';\r\n\r\nconst CommentsList = ({comments}) => (\r\n    <>\r\n    <h3>Comments:</h3>\r\n    {comments.map((comment, key) => (\r\n        <div className=\"comment\" key={key}>\r\n            <h4>{comment.username}:</h4>\r\n            <h5>{comment.text}</h5>\r\n        </div>\r\n    ))}\r\n    </>\r\n)\r\n\r\nexport default CommentsList;","import React from 'react';\r\n\r\nconst UpvotesSection = ({articleName, upvotes, setArticleInfo}) => {\r\n    const upvoteArticle = async () => {\r\n        const result = await fetch(`/api/articles/${articleName}/upvote`, {\r\n            method: 'post',\r\n\r\n        });\r\n        const body = await result.json();\r\n        setArticleInfo(body);\r\n    }\r\n    return (\r\n    <div id=\"upvotes-section\">\r\n        <button onClick={() => upvoteArticle()}>Add Upvote</button>\r\n        <p>This post has been upvoted {upvotes} times</p>\r\n    </div>\r\n);\r\n}\r\n\r\nexport default UpvotesSection;","import React from 'react';\r\n\r\nconst NotFoundPage = () => (\r\n    <h1>404: Page Not Found</h1>\r\n);\r\n\r\nexport default NotFoundPage;","const articles = [\r\n    {\r\n        name: 'learn-react',\r\n        title: 'The Fastest Way to Learn React',\r\n        content: [\r\n            `Welcome! Today we're going to be talking about the fastest way to\r\n            learn React. We'll be discussing some topics such as proin congue\r\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \r\n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \r\n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \r\n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \r\n            sodales purus euismod.`,\r\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\r\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\r\n        ]\r\n    },    {\r\n        name: 'learn-node',\r\n        title: 'How to Build a Node Server in 10 Minutes',\r\n        content: [\r\n            `In this article, we're going to be talking looking at a very quick way\r\n            to set up a Node.js server. We'll be discussing some topics such as proin congue\r\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \r\n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \r\n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \r\n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \r\n            sodales purus euismod.`,\r\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\r\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\r\n        ]\r\n    },     {\r\n        name: 'my-thoughts-on-resumes',\r\n        title: 'My Thoughts on Resumes',\r\n        content: [\r\n            `Today is the day I talk about something which scares most people: resumes.\r\n            In reality, I'm not sure why people have such a hard time with proin congue\r\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \r\n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \r\n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \r\n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \r\n            sodales purus euismod.`,\r\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\r\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\r\n        ]\r\n    },  \r\n];\r\n\r\nexport default articles;","import React, {useState} from 'react';\r\n\r\n    const AddCommentForm = ({articleName, setArticleInfo}) => {\r\n        const [username, setUsername] = useState('');\r\n        const [commentText, setCommentText] = useState('');\r\n\r\n        const addComment = async () => {\r\n            const result = await fetch(`/api/articles/${articleName}/add-comment`, {\r\n                method: 'post',\r\n                body: JSON.stringify({username, text: commentText}),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n            const body = await result.json();\r\n            setArticleInfo(body);\r\n            setUsername('');\r\n            setCommentText('');\r\n        }\r\n\r\n        return (\r\n            <div id=\"add-comment-form\">\r\n                <h3>Add a Comment:</h3>\r\n                <label>\r\n                    Name: <input type=\"text\" value={username} onChange={(event) => setUsername(event.target.value)}/>\r\n                </label>\r\n                <label>\r\n                    Comment: <textarea rows=\"4\" cols=\"50\" value={commentText} onChange={(event) => setCommentText(event.target.value)}/>\r\n                </label>\r\n                <button onClick={() => addComment()}>Add Comment</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\nexport default AddCommentForm;","import React, { useState, useEffect } from 'react';\r\nimport ArticlesList from '../components/ArticlesList';\r\nimport CommentsList from '../components/CommentsList';\r\nimport UpvotesSection from '../components/UpvotesSection';\r\nimport NotFoundPage from './NotFoundPages';\r\nimport articleContent from './article-content';\r\nimport AddCommentForm from '../components/AddCommentForm';\r\n\r\nconst ArticlePage = ({ match }) => {\r\n    const name = match.params.name;\r\n    const article = articleContent.find(article => article.name === name);\r\n\r\n    const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await fetch(`/api/articles/${name}`);\r\n            const body = await result.json();\r\n            console.log(body);\r\n            setArticleInfo(body);\r\n        }\r\n        fetchData();\r\n    }, [name]);\r\n\r\n    if (!article) return <NotFoundPage />\r\n\r\n    const otherArticles = articleContent.filter(article => article.name !== name);\r\n\r\n    return (\r\n        <>\r\n        <h1>{article.title}</h1>\r\n        <UpvotesSection articleName={name} upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo} />\r\n        {article.content.map((paragraph, key) => (\r\n            <p key={key}>{paragraph}</p>\r\n        ))}\r\n        <CommentsList comments={articleInfo.comments} />\r\n        <AddCommentForm articleName={name} setArticleInfo={setArticleInfo} />\r\n        <h3>Other Articles:</h3>\r\n        <ArticlesList articles={otherArticles} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ArticlePage;","//component library\r\nimport React from 'react';\r\n//get the article-content.js\r\nimport articleContent from './article-content';\r\nimport ArticlesList from '../components/ArticlesList';\r\n\r\nconst ArticlesListPage = () => (\r\n    <>\r\n        <h1>Articles</h1>\r\n        <ArticlesList articles={articleContent} />\r\n    </>    \r\n);\r\n\r\nexport default ArticlesListPage;","import React from 'react';\r\n\r\nconst HomePage = () => {\r\n    return (\r\n    <>\r\n        <h1>Hello, welcome to my blog!</h1>\r\n        <p>\r\n            It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).    \r\n        </p>\r\n        <p>\r\n            It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).    \r\n        </p>\r\n    </>    \r\n    );\r\n}\r\n\r\nexport default HomePage;","import React, {Component} from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom';\nimport './App.css';\nimport NavBar from './navbar';\nimport AboutPage from './pages/AboutPage';\nimport ArticlePage from './pages/ArticlePage';\nimport ArticlesListPage from './pages/ArticlesListPage';\nimport HomePage from './pages/HomePage';\nimport NotFoundPage from './pages/NotFoundPages';\n\nclass App extends Component {\n  render()  {\n    return (\n      <Router>\n        <div className=\"App\">\n        <NavBar />\n        <div id=\"page-body\">\n            <Switch>\n              <Route path=\"/\" component={HomePage} exact />\n              <Route path=\"/about\" component={AboutPage} />\n              <Route path=\"/articles-list\" component={ArticlesListPage} />\n              <Route path=\"/article/:name\" component={ArticlePage} />   \n              <Route component={NotFoundPage} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'whatwg-fetch';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}